{"ast":null,"code":"var _jsxFileName = \"/Users/rhendren/Downloads/divjoy-project (4)/src/components/DashboardSection.js\";\nimport React, { useState } from \"react\";\nimport Section from \"./Section\";\nimport ReauthModal from \"./ReauthModal\";\nimport DashboardNav from \"./DashboardNav\";\nimport FormAlert from \"./FormAlert\";\nimport DashboardHome from \"./DashboardHome\";\nimport DashboardSms from \"./DashboardSms\";\nimport { useAuth } from \"./../util/auth.js\";\nimport \"./DashboardSection.scss\";\n\nfunction DashboardSection2(props) {\n  const auth = useAuth();\n  const [formAlert, setFormAlert] = useState(null); // State to control whether we show a re-authentication flow\n  // Required by some security sensitive actions, such as changing password.\n\n  const [reauthState, setReauthState] = useState({\n    show: false\n  });\n  const validSections = {\n    home: true,\n    \"send-a-text\": true\n  };\n  const section = validSections[props.section] ? props.section : \"home\"; // Handle status of type \"success\", \"error\", or \"requires-recent-login\"\n  // We don't treat \"requires-recent-login\" as an error as we handle it\n  // gracefully by taking the user through a re-authentication flow.\n\n  const handleStatus = ({\n    type,\n    message,\n    callback\n  }) => {\n    if (type === \"requires-recent-login\") {\n      // First clear any existing message\n      setFormAlert(null); // Then update state to show re-authentication modal\n\n      setReauthState({\n        show: true,\n        // Failed action to try again after reauth\n        callback: callback\n      });\n    } else {\n      // Display message to user (type is success or error)\n      setFormAlert({\n        type: type,\n        message: message\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Section, {\n    color: props.color,\n    size: props.size,\n    backgroundImage: props.backgroundImage,\n    backgroundImageOpacity: props.backgroundImageOpacity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, reauthState.show && /*#__PURE__*/React.createElement(ReauthModal, {\n    callback: reauthState.callback,\n    provider: auth.user.providers[0],\n    onDone: () => setReauthState({\n      show: false\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DashboardNav, {\n    activeKey: section,\n    parentColor: props.color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DashboardSection2__container container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, formAlert && /*#__PURE__*/React.createElement(FormAlert, {\n    type: formAlert.type,\n    message: formAlert.message,\n    style: {\n      maxWidth: \"450px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), section === \"home\" && /*#__PURE__*/React.createElement(DashboardHome, {\n    parentColor: props.color,\n    onStatus: handleStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), section === \"send-a-text\" && /*#__PURE__*/React.createElement(DashboardSms, {\n    parentColor: props.color,\n    onStatus: handleStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default DashboardSection2;","map":{"version":3,"sources":["/Users/rhendren/Downloads/divjoy-project (4)/src/components/DashboardSection.js"],"names":["React","useState","Section","ReauthModal","DashboardNav","FormAlert","DashboardHome","DashboardSms","useAuth","DashboardSection2","props","auth","formAlert","setFormAlert","reauthState","setReauthState","show","validSections","home","section","handleStatus","type","message","callback","color","size","backgroundImage","backgroundImageOpacity","user","providers","maxWidth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,OAAO,yBAAP;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAChC,QAAMC,IAAI,GAAGH,OAAO,EAApB;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,IAAD,CAA1C,CAFgC,CAIhC;AACA;;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC;AAC7Ce,IAAAA,IAAI,EAAE;AADuC,GAAD,CAA9C;AAIA,QAAMC,aAAa,GAAG;AACpBC,IAAAA,IAAI,EAAE,IADc;AAEpB,mBAAe;AAFK,GAAtB;AAKA,QAAMC,OAAO,GAAGF,aAAa,CAACP,KAAK,CAACS,OAAP,CAAb,GAA+BT,KAAK,CAACS,OAArC,GAA+C,MAA/D,CAfgC,CAiBhC;AACA;AACA;;AACA,QAAMC,YAAY,GAAG,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAAD,KAAiC;AACpD,QAAIF,IAAI,KAAK,uBAAb,EAAsC;AACpC;AACAR,MAAAA,YAAY,CAAC,IAAD,CAAZ,CAFoC,CAGpC;;AACAE,MAAAA,cAAc,CAAC;AACbC,QAAAA,IAAI,EAAE,IADO;AAEb;AACAO,QAAAA,QAAQ,EAAEA;AAHG,OAAD,CAAd;AAKD,KATD,MASO;AACL;AACAV,MAAAA,YAAY,CAAC;AACXQ,QAAAA,IAAI,EAAEA,IADK;AAEXC,QAAAA,OAAO,EAAEA;AAFE,OAAD,CAAZ;AAID;AACF,GAjBD;;AAmBA,sBACE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAEZ,KAAK,CAACc,KADf;AAEE,IAAA,IAAI,EAAEd,KAAK,CAACe,IAFd;AAGE,IAAA,eAAe,EAAEf,KAAK,CAACgB,eAHzB;AAIE,IAAA,sBAAsB,EAAEhB,KAAK,CAACiB,sBAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGb,WAAW,CAACE,IAAZ,iBACC,oBAAC,WAAD;AACE,IAAA,QAAQ,EAAEF,WAAW,CAACS,QADxB;AAEE,IAAA,QAAQ,EAAEZ,IAAI,CAACiB,IAAL,CAAUC,SAAV,CAAoB,CAApB,CAFZ;AAGE,IAAA,MAAM,EAAE,MAAMd,cAAc,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,eAcE,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAEG,OAAzB;AAAkC,IAAA,WAAW,EAAET,KAAK,CAACc,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,eAeE;AAAK,IAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,SAAS,iBACR,oBAAC,SAAD;AACE,IAAA,IAAI,EAAEA,SAAS,CAACS,IADlB;AAEE,IAAA,OAAO,EAAET,SAAS,CAACU,OAFrB;AAGE,IAAA,KAAK,EAAE;AAAEQ,MAAAA,QAAQ,EAAE;AAAZ,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EASGX,OAAO,KAAK,MAAZ,iBACC,oBAAC,aAAD;AAAe,IAAA,WAAW,EAAET,KAAK,CAACc,KAAlC;AAAyC,IAAA,QAAQ,EAAEJ,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAaGD,OAAO,KAAK,aAAZ,iBACC,oBAAC,YAAD;AAAc,IAAA,WAAW,EAAET,KAAK,CAACc,KAAjC;AAAwC,IAAA,QAAQ,EAAEJ,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,CAfF,CADF;AAmCD;;AAED,eAAeX,iBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Section from \"./Section\";\nimport ReauthModal from \"./ReauthModal\";\nimport DashboardNav from \"./DashboardNav\";\nimport FormAlert from \"./FormAlert\";\nimport DashboardHome from \"./DashboardHome\";\nimport DashboardSms from \"./DashboardSms\";\nimport { useAuth } from \"./../util/auth.js\";\nimport \"./DashboardSection.scss\";\n\nfunction DashboardSection2(props) {\n  const auth = useAuth();\n  const [formAlert, setFormAlert] = useState(null);\n\n  // State to control whether we show a re-authentication flow\n  // Required by some security sensitive actions, such as changing password.\n  const [reauthState, setReauthState] = useState({\n    show: false,\n  });\n\n  const validSections = {\n    home: true,\n    \"send-a-text\": true,\n  };\n\n  const section = validSections[props.section] ? props.section : \"home\";\n\n  // Handle status of type \"success\", \"error\", or \"requires-recent-login\"\n  // We don't treat \"requires-recent-login\" as an error as we handle it\n  // gracefully by taking the user through a re-authentication flow.\n  const handleStatus = ({ type, message, callback }) => {\n    if (type === \"requires-recent-login\") {\n      // First clear any existing message\n      setFormAlert(null);\n      // Then update state to show re-authentication modal\n      setReauthState({\n        show: true,\n        // Failed action to try again after reauth\n        callback: callback,\n      });\n    } else {\n      // Display message to user (type is success or error)\n      setFormAlert({\n        type: type,\n        message: message,\n      });\n    }\n  };\n\n  return (\n    <Section\n      color={props.color}\n      size={props.size}\n      backgroundImage={props.backgroundImage}\n      backgroundImageOpacity={props.backgroundImageOpacity}\n    >\n      {reauthState.show && (\n        <ReauthModal\n          callback={reauthState.callback}\n          provider={auth.user.providers[0]}\n          onDone={() => setReauthState({ show: false })}\n        />\n      )}\n\n      <DashboardNav activeKey={section} parentColor={props.color} />\n      <div className=\"DashboardSection2__container container\">\n        {formAlert && (\n          <FormAlert\n            type={formAlert.type}\n            message={formAlert.message}\n            style={{ maxWidth: \"450px\" }}\n          />\n        )}\n\n        {section === \"home\" && (\n          <DashboardHome parentColor={props.color} onStatus={handleStatus} />\n        )}\n\n        {section === \"send-a-text\" && (\n          <DashboardSms parentColor={props.color} onStatus={handleStatus} />\n        )}\n      </div>\n    </Section>\n  );\n}\n\nexport default DashboardSection2;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from\"/Users/rhendren/Desktop/text/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Section from\"./Section\";import ReauthModal from\"./ReauthModal\";import DashboardNav from\"./DashboardNav\";import FormAlert from\"./FormAlert\";import DashboardHome from\"./DashboardHome\";import DashboardSms from\"./DashboardSms\";import{useAuth}from\"./../util/auth.js\";import\"./DashboardSection.scss\";function DashboardSection2(props){var auth=useAuth();var _useState=useState(null),_useState2=_slicedToArray(_useState,2),formAlert=_useState2[0],setFormAlert=_useState2[1];// State to control whether we show a re-authentication flow\n// Required by some security sensitive actions, such as changing password.\nvar _useState3=useState({show:false}),_useState4=_slicedToArray(_useState3,2),reauthState=_useState4[0],setReauthState=_useState4[1];var validSections={home:true,\"send-a-text\":true};var section=validSections[props.section]?props.section:\"home\";// Handle status of type \"success\", \"error\", or \"requires-recent-login\"\n// We don't treat \"requires-recent-login\" as an error as we handle it\n// gracefully by taking the user through a re-authentication flow.\nvar handleStatus=function handleStatus(_ref){var type=_ref.type,message=_ref.message,callback=_ref.callback;if(type===\"requires-recent-login\"){// First clear any existing message\nsetFormAlert(null);// Then update state to show re-authentication modal\nsetReauthState({show:true,// Failed action to try again after reauth\ncallback:callback});}else{// Display message to user (type is success or error)\nsetFormAlert({type:type,message:message});}};return/*#__PURE__*/React.createElement(Section,{color:props.color,size:props.size,backgroundImage:props.backgroundImage,backgroundImageOpacity:props.backgroundImageOpacity},reauthState.show&&/*#__PURE__*/React.createElement(ReauthModal,{callback:reauthState.callback,provider:auth.user.providers[0],onDone:function onDone(){return setReauthState({show:false});}}),/*#__PURE__*/React.createElement(DashboardNav,{activeKey:section,parentColor:props.color}),/*#__PURE__*/React.createElement(\"div\",{className:\"DashboardSection2__container container\"},formAlert&&/*#__PURE__*/React.createElement(FormAlert,{type:formAlert.type,message:formAlert.message,style:{maxWidth:\"450px\"}}),section===\"home\"&&/*#__PURE__*/React.createElement(DashboardHome,{parentColor:props.color,onStatus:handleStatus}),section===\"send-a-text\"&&/*#__PURE__*/React.createElement(DashboardSms,{parentColor:props.color,onStatus:handleStatus})));}export default DashboardSection2;","map":{"version":3,"sources":["/Users/rhendren/Desktop/text/src/components/DashboardSection.js"],"names":["React","useState","Section","ReauthModal","DashboardNav","FormAlert","DashboardHome","DashboardSms","useAuth","DashboardSection2","props","auth","formAlert","setFormAlert","show","reauthState","setReauthState","validSections","home","section","handleStatus","type","message","callback","color","size","backgroundImage","backgroundImageOpacity","user","providers","maxWidth"],"mappings":"mJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,OAASC,OAAT,KAAwB,mBAAxB,CACA,MAAO,yBAAP,CAEA,QAASC,CAAAA,iBAAT,CAA2BC,KAA3B,CAAkC,CAChC,GAAMC,CAAAA,IAAI,CAAGH,OAAO,EAApB,CADgC,cAEEP,QAAQ,CAAC,IAAD,CAFV,wCAEzBW,SAFyB,eAEdC,YAFc,eAIhC;AACA;AALgC,eAMMZ,QAAQ,CAAC,CAC7Ca,IAAI,CAAE,KADuC,CAAD,CANd,yCAMzBC,WANyB,eAMZC,cANY,eAUhC,GAAMC,CAAAA,aAAa,CAAG,CACpBC,IAAI,CAAE,IADc,CAEpB,cAAe,IAFK,CAAtB,CAKA,GAAMC,CAAAA,OAAO,CAAGF,aAAa,CAACP,KAAK,CAACS,OAAP,CAAb,CAA+BT,KAAK,CAACS,OAArC,CAA+C,MAA/D,CAEA;AACA;AACA;AACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAiC,IAA9BC,CAAAA,IAA8B,MAA9BA,IAA8B,CAAxBC,OAAwB,MAAxBA,OAAwB,CAAfC,QAAe,MAAfA,QAAe,CACpD,GAAIF,IAAI,GAAK,uBAAb,CAAsC,CACpC;AACAR,YAAY,CAAC,IAAD,CAAZ,CACA;AACAG,cAAc,CAAC,CACbF,IAAI,CAAE,IADO,CAEb;AACAS,QAAQ,CAAEA,QAHG,CAAD,CAAd,CAKD,CATD,IASO,CACL;AACAV,YAAY,CAAC,CACXQ,IAAI,CAAEA,IADK,CAEXC,OAAO,CAAEA,OAFE,CAAD,CAAZ,CAID,CACF,CAjBD,CAmBA,mBACE,oBAAC,OAAD,EACE,KAAK,CAAEZ,KAAK,CAACc,KADf,CAEE,IAAI,CAAEd,KAAK,CAACe,IAFd,CAGE,eAAe,CAAEf,KAAK,CAACgB,eAHzB,CAIE,sBAAsB,CAAEhB,KAAK,CAACiB,sBAJhC,EAMGZ,WAAW,CAACD,IAAZ,eACC,oBAAC,WAAD,EACE,QAAQ,CAAEC,WAAW,CAACQ,QADxB,CAEE,QAAQ,CAAEZ,IAAI,CAACiB,IAAL,CAAUC,SAAV,CAAoB,CAApB,CAFZ,CAGE,MAAM,CAAE,wBAAMb,CAAAA,cAAc,CAAC,CAAEF,IAAI,CAAE,KAAR,CAAD,CAApB,EAHV,EAPJ,cAcE,oBAAC,YAAD,EAAc,SAAS,CAAEK,OAAzB,CAAkC,WAAW,CAAET,KAAK,CAACc,KAArD,EAdF,cAeE,2BAAK,SAAS,CAAC,wCAAf,EACGZ,SAAS,eACR,oBAAC,SAAD,EACE,IAAI,CAAEA,SAAS,CAACS,IADlB,CAEE,OAAO,CAAET,SAAS,CAACU,OAFrB,CAGE,KAAK,CAAE,CAAEQ,QAAQ,CAAE,OAAZ,CAHT,EAFJ,CASGX,OAAO,GAAK,MAAZ,eACC,oBAAC,aAAD,EAAe,WAAW,CAAET,KAAK,CAACc,KAAlC,CAAyC,QAAQ,CAAEJ,YAAnD,EAVJ,CAaGD,OAAO,GAAK,aAAZ,eACC,oBAAC,YAAD,EAAc,WAAW,CAAET,KAAK,CAACc,KAAjC,CAAwC,QAAQ,CAAEJ,YAAlD,EAdJ,CAfF,CADF,CAmCD,CAED,cAAeX,CAAAA,iBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Section from \"./Section\";\nimport ReauthModal from \"./ReauthModal\";\nimport DashboardNav from \"./DashboardNav\";\nimport FormAlert from \"./FormAlert\";\nimport DashboardHome from \"./DashboardHome\";\nimport DashboardSms from \"./DashboardSms\";\nimport { useAuth } from \"./../util/auth.js\";\nimport \"./DashboardSection.scss\";\n\nfunction DashboardSection2(props) {\n  const auth = useAuth();\n  const [formAlert, setFormAlert] = useState(null);\n\n  // State to control whether we show a re-authentication flow\n  // Required by some security sensitive actions, such as changing password.\n  const [reauthState, setReauthState] = useState({\n    show: false,\n  });\n\n  const validSections = {\n    home: true,\n    \"send-a-text\": true,\n  };\n\n  const section = validSections[props.section] ? props.section : \"home\";\n\n  // Handle status of type \"success\", \"error\", or \"requires-recent-login\"\n  // We don't treat \"requires-recent-login\" as an error as we handle it\n  // gracefully by taking the user through a re-authentication flow.\n  const handleStatus = ({ type, message, callback }) => {\n    if (type === \"requires-recent-login\") {\n      // First clear any existing message\n      setFormAlert(null);\n      // Then update state to show re-authentication modal\n      setReauthState({\n        show: true,\n        // Failed action to try again after reauth\n        callback: callback,\n      });\n    } else {\n      // Display message to user (type is success or error)\n      setFormAlert({\n        type: type,\n        message: message,\n      });\n    }\n  };\n\n  return (\n    <Section\n      color={props.color}\n      size={props.size}\n      backgroundImage={props.backgroundImage}\n      backgroundImageOpacity={props.backgroundImageOpacity}\n    >\n      {reauthState.show && (\n        <ReauthModal\n          callback={reauthState.callback}\n          provider={auth.user.providers[0]}\n          onDone={() => setReauthState({ show: false })}\n        />\n      )}\n\n      <DashboardNav activeKey={section} parentColor={props.color} />\n      <div className=\"DashboardSection2__container container\">\n        {formAlert && (\n          <FormAlert\n            type={formAlert.type}\n            message={formAlert.message}\n            style={{ maxWidth: \"450px\" }}\n          />\n        )}\n\n        {section === \"home\" && (\n          <DashboardHome parentColor={props.color} onStatus={handleStatus} />\n        )}\n\n        {section === \"send-a-text\" && (\n          <DashboardSms parentColor={props.color} onStatus={handleStatus} />\n        )}\n      </div>\n    </Section>\n  );\n}\n\nexport default DashboardSection2;\n"]},"metadata":{},"sourceType":"module"}